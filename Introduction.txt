
很好的SVM工具箱：LIBSVM

核密度估计 Kernel Density Estimation (KDE)
解决一类由给定样本集合求解随机变量的分布密度函数的问题

由于核密度估计方法，作为一种非参数估计方法，
不利用有关数据分布的先验知识，对数据分布不附加任何假定，
是一种从数据样本本身出发研究数据分布特征的方法

核密度函数的原理比较简单，
在我们知道某一事物的概率分布的情况下，
如果某一个数在观察中出现了，我们可以认为这个数的概率密度很大，
和这个数比较近的数的概率密度也会比较大，而那些离这个数远的数的概率密度会比较小。
基于这种想法，针对观察中的每一个数，
我们可以用K去拟合我们想象中的那个远小近大概率密度。
对每一个观察数拟合出的多个概率密度分布函数，取平均。
如果某些数是比较重要的，则可以取加权平均。
需要说明的一点是，核密度的估计并不是找到真正的分布函数。
Note: 核密度估计其实就是通过核函数（如高斯）将每个数据点的数据+带宽当作核函数的参数，
得到N个核函数，再线性叠加就形成了核密度的估计函数，归一化后就是核密度概率密度函数了。

KDE主要有两个影响因素：核函数K和核宽h
1、核函数必须满足非负、积分为1，符合概率密度性质，并且均值为0
理论上，所有平滑的峰值函数均可作为KDE的核函数来使用，
只要对归一化后的KDE而言(描绘在图上的是数据点出现的概率值)，
该函数曲线下方的面积和等于1即可。
2、核宽反映了KDE曲线整体的平坦程度，也即观察到的数据点在KDE曲线形成过程中所占的比重。
核宽越大，观察到的数据点在最终形成的曲线形状中所占比重越小，KDE整体曲线就越平坦；
核宽越小，观察到的数据点在最终形成的曲线形状中所占比重越大，KDE整体曲线就越陡峭。
核宽的选择很大程度上取决于主观判断：如果认为真实的概率分布曲线是比较平坦的，
那么就选择较大的核宽；
相反，如果认为真实的概率分布曲线是比较陡峭的，那么就选择较小的核宽。
---带宽计算好像也有相应的方法，如R语言中计算带宽时，默认采用”nrd0″方法。
---如果带宽不是固定的，其变化取决于估计的位置（balloon  estimator）
或样本点（逐点估计pointwise estimator），
由此可以产产生一个非常强大的方法称为自适应或可变带宽核密度估计。

优化：
稍微想一下就发现这个程序太冗余了，
如果有很多点（n很大），并且输出图像很大，
那么每一个像素都需要进行n个累积的加法运算，
并且大部分都是+0
（因为一般来说，一个点附近的点不会很多，远远小于n，
其余大部分点与这个像素的距离都大于r），这样就造成了冗余计算。
解决方案当然也非常简单，就是建立一个索引，
然后在计算某个像素的核密度估计值时利用索引搜索出附近的点，
然后累积这些点的核函数即可。












